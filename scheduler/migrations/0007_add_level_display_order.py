# Generated by Django 5.2.3 on 2025-09-21 12:40

from django.db import migrations, models


def set_initial_display_order(apps, schema_editor):
    """Set display_order for existing levels based on ID (creation order)."""
    Level = apps.get_model('scheduler', 'Level')

    # For each season, set display_order based on ID order
    seasons = set(Level.objects.values_list('season_id', flat=True))

    for season_id in seasons:
        levels = Level.objects.filter(season_id=season_id).order_by('id')
        for index, level in enumerate(levels):
            level.display_order = index
            level.save()


def reverse_set_initial_display_order(apps, schema_editor):
    """Reverse migration - set all display_order back to 0."""
    Level = apps.get_model('scheduler', 'Level')
    Level.objects.all().update(display_order=0)


class Migration(migrations.Migration):

    dependencies = [
        ('scheduler', '0006_alter_game_season_team1_alter_game_season_team2_and_more'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='level',
            options={'ordering': ['display_order', 'id']},
        ),
        migrations.AddField(
            model_name='level',
            name='display_order',
            field=models.PositiveIntegerField(default=0, help_text='Order for displaying levels (lower numbers shown first)'),
        ),
        migrations.RunPython(
            set_initial_display_order,
            reverse_set_initial_display_order,
        ),
    ]
