# Generated by Django 5.2.3 on 2025-08-17 14:08

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='TeamOrganization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Team name that persists across seasons', max_length=100, unique=True)),
                ('is_archived', models.BooleanField(default=False, help_text="Whether this team is archived and shouldn't appear in new season creation")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='e.g., 24/25 Season 1', max_length=100, unique=True)),
                ('is_active', models.BooleanField(default=False, help_text='Designates this season as the currently active one (only one can be active).')),
                ('slot_duration_minutes', models.PositiveIntegerField(default=70, help_text='Duration of each game slot in minutes (includes game time + halftime)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'constraints': [models.UniqueConstraint(condition=models.Q(('is_active', True)), fields=('is_active',), name='unique_active_season')],
            },
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='e.g., Mid, High, Top, etc.', max_length=50)),
                ('slot_duration_minutes', models.PositiveIntegerField(blank=True, help_text='Duration override for this level (falls back to season default if not set)', null=True)),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='levels', to='scheduler.season')),
            ],
            options={
                'unique_together': {('season', 'name')},
            },
        ),
        migrations.CreateModel(
            name='SeasonTeam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='season_teams', to='scheduler.level')),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='season_teams', to='scheduler.season')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='season_participations', to='scheduler.teamorganization')),
            ],
            options={
                'ordering': ['level', 'team__name'],
                'unique_together': {('season', 'team')},
            },
        ),
        migrations.CreateModel(
            name='Week',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('week_number', models.PositiveIntegerField()),
                ('monday_date', models.DateField()),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weeks', to='scheduler.season')),
            ],
            options={
                'unique_together': {('season', 'week_number')},
            },
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('referee_name', models.CharField(blank=True, max_length=100, null=True)),
                ('day_of_week', models.PositiveIntegerField(blank=True, null=True)),
                ('time', models.TimeField(blank=True, null=True)),
                ('court', models.CharField(blank=True, max_length=100, null=True)),
                ('team1_score', models.PositiveIntegerField(blank=True, null=True)),
                ('team2_score', models.PositiveIntegerField(blank=True, null=True)),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='games', to='scheduler.level')),
                ('referee_season_team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='games_as_referee', to='scheduler.seasonteam')),
                ('season_team1', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='games_as_team1', to='scheduler.seasonteam')),
                ('season_team2', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='games_as_team2', to='scheduler.seasonteam')),
                ('week', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='games', to='scheduler.week')),
            ],
            options={
                'ordering': ['week', 'level'],
            },
        ),
        migrations.CreateModel(
            name='OffWeek',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monday_date', models.DateField()),
                ('title', models.CharField(default='Off Week', help_text='Title of this non-league week', max_length=100)),
                ('description', models.TextField(default='No games scheduled', help_text="Description of what's happening this week (e.g., 'Charity Tournament', 'Holiday Break')")),
                ('has_basketball', models.BooleanField(default=False, help_text='Whether basketball events are happening this week (affects styling)')),
                ('start_time', models.TimeField(blank=True, help_text='Start time for events this week', null=True)),
                ('end_time', models.TimeField(blank=True, help_text='End time for events this week', null=True)),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='off_weeks', to='scheduler.season')),
            ],
            options={
                'unique_together': {('season', 'monday_date')},
            },
        ),
    ]
